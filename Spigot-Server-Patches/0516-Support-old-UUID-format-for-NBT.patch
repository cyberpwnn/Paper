From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 29 Jun 2020 03:26:17 -0400
Subject: [PATCH] Support old UUID format for NBT

We have stored UUID in plenty of places that did not get DFU'd

So just look for old format and load it if it exists.

diff --git a/src/main/java/net/minecraft/server/GameProfileSerializer.java b/src/main/java/net/minecraft/server/GameProfileSerializer.java
index 66d503a91665952b98c8cdc06c9ad10782b0558b..dca47422816e0ff5cf56ee73d0aa7e2f74a48060 100644
--- a/src/main/java/net/minecraft/server/GameProfileSerializer.java
+++ b/src/main/java/net/minecraft/server/GameProfileSerializer.java
@@ -28,6 +28,11 @@ public final class GameProfileSerializer {
             s = nbttagcompound.getString("Name");
         }
 
+        // Paper start - support string UUID's
+        if (nbttagcompound.hasKeyOfType("Id", 8)) {
+            uuid = UUID.fromString(nbttagcompound.getString("Id"));
+        }
+        // Paper end
         if (nbttagcompound.b("Id")) {
             uuid = nbttagcompound.a("Id");
         }
diff --git a/src/main/java/net/minecraft/server/NBTTagCompound.java b/src/main/java/net/minecraft/server/NBTTagCompound.java
index 8dd91ddf9e1489ec035452c590cbd59afa44c18f..06d5acab794e3ee139a11f9b068e8a359c46db2c 100644
--- a/src/main/java/net/minecraft/server/NBTTagCompound.java
+++ b/src/main/java/net/minecraft/server/NBTTagCompound.java
@@ -136,6 +136,12 @@ public class NBTTagCompound implements NBTBase {
 
     public void setUUID(String prefix, UUID uuid) { a(prefix, uuid); } // Paper - OBFHELPER
     public void a(String s, UUID uuid) {
+        // Paper start - support old format
+        if (this.hasKeyOfType(s + "Most", 99) && this.hasKeyOfType(s + "Least", 99)) {
+            this.map.remove(s + "Most");
+            this.map.remove(s + "Least");
+        }
+        // Paper end
         this.map.put(s, GameProfileSerializer.a(uuid));
     }
 
@@ -143,11 +149,21 @@ public class NBTTagCompound implements NBTBase {
     @Nullable public UUID getUUID(String prefix) { return a(prefix); } // Paper - OBFHELPER
     @Nullable
     public UUID a(String s) {
+        // Paper start - support old format
+        if (!hasKeyOfType(s, 11) && this.hasKeyOfType(s + "Most", 99) && this.hasKeyOfType(s + "Least", 99)) {
+            return new UUID(this.getLong(s + "Most"), this.getLong(s + "Least"));
+        }
+        // Paper end
         return GameProfileSerializer.a(this.get(s));
     }
 
     public final boolean hasUUID(String s) { return this.b(s); } // Paper - OBFHELPER
     public boolean b(String s) {
+        // Paper start - support old format
+        if (this.hasKeyOfType(s + "Most", 99) && this.hasKeyOfType(s + "Least", 99)) {
+            return true;
+        }
+        // Paper end
         NBTBase nbtbase = this.get(s);
 
         return nbtbase != null && nbtbase.b() == NBTTagIntArray.a && ((NBTTagIntArray) nbtbase).getInts().length == 4;
